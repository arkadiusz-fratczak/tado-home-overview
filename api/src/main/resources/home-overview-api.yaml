openapi: 3.0.1
info:
  title: Home overview API
  description: Groups operations related with checking climate in home
  version: 1.0.0
servers:
  - url: http://localhost:8080/home-overview/api
tags:
  - name: home
    description: Operations related with home and room management
  - name: sensor
    description: Operations related with sensors managment, which are responsible for measuring
      values like temperature, humidity etc.
paths:
  /homes:
    get:
      tags:
        - home
      summary: Get all homes
      operationId: getAllHomes
      parameters:
        - name: userAlias
          description: Filter homes to the ones, which owner match with userAlias
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HomeDTO'
        '404':
          description: There isn't any home associated with the given user
          content: {}
    post:
      tags:
        - home
      summary: Create home
      operationId: createHome
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHomeDTO'
      responses:
        '201':
          description: Home created successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHomeDTO'
  /homes/{homeId}:
    get:
      tags:
        - home
      summary: Get home's details by home id
      operationId: getHomeById
      parameters:
        - name: homeId
          description: Identifier of home
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHomeDTO'
        '404':
          description: Home not found
          content: {}
  /homes/{homeId}/residents/{userAlias}:
    put:
      tags:
        - home
      summary: Add resident to home
      operationId: addResident
      parameters:
        - name: homeId
          description: Identifier of home
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: userAlias
          description: Alias of user to be associated with home
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content, resident added successfuly
          content: { }
  /homes/{homeId}/rooms:
    post:
      tags:
        - home
      summary: Create room
      operationId: createRoom
      parameters:
        - name: homeId
          description: Identifier of home
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomDTO'
      responses:
        '201':
          description: Room created successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedRoomDTO'
  /homes/{homeId}/rooms/{roomId}:
    get:
      tags:
        - home
      summary: Get room's details by room id
      operationId: getRoomById
      parameters:
        - name: homeId
          description: Identifier of home
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: roomId
          description: Identifier of room
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedRoomDTO'
  /homes/{homeId}/rooms/{roomId}/sensors/{sensorId}:
    put:
      tags:
        - home
      summary: Add sensor to room
      operationId: addSensor
      parameters:
        - name: homeId
          description: Identifier of home
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: roomId
          description: Identifier of room
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: sensorId
          description: Identifier of sensor
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content, sensor added successfuly
          content: { }
  /sensors:
    get:
      tags:
        - sensor
      summary: Get all sensors
      operationId: getAllSensors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorDTO'
    post:
      tags:
        - sensor
      summary: Create sensor
      operationId: createSensor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensorDTO'
      responses:
        '201':
          description: Sensor created successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorDTO'
  /sensors/{sensorId}:
    get:
      tags:
        - sensor
      summary: Get sensor's details by sensor id
      operationId: getSensorById
      parameters:
        - name: sensorId
          description: Identifier of sensor
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensorDTO'
        '404':
          description: Sensor not found
          content: { }
    put:
      tags:
        - sensor
      summary: Update value measured by sensor
      operationId: updateSensorState
      parameters:
        - name: sensorId
          description: Identifier of sensor
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSensorStateDTO'
      responses:
        '204':
          description: No content. Sensor updated successfuly
          content: {}
components:
  schemas:
    CreateSensorDTO:
      type: object
      properties:
        valueType:
          type: string
          description: Type of the measured value, eg. temperature, humidity
        unit:
          type: string
          description: Unit of the measured value, eg. CELCIUS, PERCENT
    UpdateSensorStateDTO:
      type: object
      properties:
        value:
          type: number
          format: float
          description: Measured value
    SensorDTO:
      type: object
      properties:
        sensorId:
          type: integer
          format: int64
          description: Identifier of sensor
        valueType:
          type: string
          description: Type of the measured value, eg. temperature, humidity
        unit:
          type: string
          description: Unit of the measured value
        value:
          type: number
          format: float
          description: Measured value
    CreateRoomDTO:
      type: object
      properties:
        name:
          type: string
    DetailedRoomDTO:
      type: object
      properties:
        roomId:
          type: integer
          format: int64
        name:
          type: string
        sensors:
          type: array
          items:
            $ref: '#/components/schemas/SensorDTO'
    CreateHomeDTO:
      type: object
      properties:
        owner:
          type: string
        name:
          type: string
    HomeDTO:
      type: object
      properties:
        homeId:
          type: integer
          format: int64
        owner:
          type: string
        name:
          type: string
    DetailedHomeDTO:
      type: object
      properties:
        homeId:
          type: integer
          format: int64
        owner:
          type: string
        name:
          type: string
        residents:
          type: array
          items:
            type: string
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/DetailedRoomDTO'
